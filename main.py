from aiogram import Bot, Dispatcher
from aiogram.types import Message, FSInputFile
from aiogram.filters import CommandStart
from aiogram import F
from bot_func import RoadObjectDetector
import asyncio
import os

TOKEN = "7409424776:AAFPB8HDY7tUaVskUZ62k4Jq_M71FYMI30s"

bot = Bot(token=TOKEN)
dp = Dispatcher()

@dp.message(CommandStart())
async def send_start(message: Message):
    await message.answer("–Ø —É–º–µ—é –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ —Å –ª—é–¥—å–º–∏ –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–º.\n–°–∫–∏–Ω—å –ª—é–±–æ–µ –≤–∏–¥–µ–æ.")

@dp.message(F.video | F.document)
async def handle_video(message: Message):
    file_info = message.video or message.document

    if not file_info.mime_type.startswith("video"):
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –∏–º–µ–Ω–Ω–æ –≤–∏–¥–µ–æ.")
        return

    await message.answer("–°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ...")
    file = await bot.get_file(file_info.file_id)
    file_path = file.file_path
    file_id = file.file_unique_id
    input_path = f"downloads/{file_id}.mp4"
    output_path = f"downloads/{file_id}_detected"

    os.makedirs("downloads", exist_ok=True)
    await bot.download_file(file_path, destination=input_path)

    await message.answer("–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∏–¥–µ–æ, –ø–æ–¥–æ–∂–¥–∏...")

    detector = RoadObjectDetector(model_path="yolov3.pt")
    detector.detect_objects(input_path, output_path=output_path)
    filtered = detector.filter_road_objects()

    if not filtered:
        await message.answer("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üòî")
    else:
        objects = [obj['name'] for obj in filtered]

        unique_objects = list(set(objects))
        summary = f"–ù–∞–π–¥–µ–Ω—ã –æ–±—ä–µ–∫—Ç—ã: {', '.join(unique_objects)}"

        if len(summary) <= 4000:
            await message.answer(summary)
        else:
            list_path = f"downloads/{file_id}_objects.txt"
            with open(list_path, "w", encoding="utf-8") as f:
                f.write("\n".join(unique_objects))
            await message.answer_document(open(list_path, "rb"), caption="–°–ø–∏—Å–æ–∫ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤")
            os.remove(list_path)


    detected_video_path = output_path + ".mp4"

    if os.path.exists(detected_video_path):
        video_file = FSInputFile(detected_video_path)
        await message.answer_video(video=video_file, caption="–í–æ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ üìπ")

    os.remove(input_path)
    os.remove(detected_video_path)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
